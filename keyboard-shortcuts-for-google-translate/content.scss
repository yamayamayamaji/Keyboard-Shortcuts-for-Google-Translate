/*!
 * content.scss
 * in "Keyboard Shortcuts for Google Translate" (Google Chrome Extension)
 * https://github.com/yamayamayamaji/Keyboard-Shortcuts-for-Google-Translate
 * Copyright 2013, Ryosuke Yamaji
 *
 * License: MIT
 */
@charset "utf-8";

//mixins
@mixin key-nav($shortcutKey) {
    color: #aaa;
    font-weight: normal;
    position: relative;
    text-decoration: underline;
    @content;
    content: $shortcutKey;
}

@mixin key-nav-h($shortcutKey) {
    @include key-nav($shortcutKey);
}
@mixin key-nav-v($shortcutKey, $top) {
    @include key-nav($shortcutKey) {
        display: block;
        text-align: center;
        @content;
    }
    top: $top;
}

@mixin key-nav-v-char($shortcutKey, $top: -12px) {
    @include key-nav-v($shortcutKey, $top) {
        font-size: smaller;
    }
}
@mixin key-nav-v-num($shortcutKey, $top: -13px) {
    @include key-nav-v($shortcutKey, $top) {
        @content;
    }
}
@mixin key-nav-for-langlist($shortcutKey, $top: -5px) {
    @include key-nav-v($shortcutKey, $top) {
        left: -7px;
    }
}


body {
    counter-reset: langs;
}

// language swap
#gt-swap::after {
    @include key-nav-v-num("(0)");
}
// language select
#gt-langs .jfk-button:not([aria-hidden="true"]):not(#gt-swap):not(#gt-submit)::after {
    @include key-nav-h("(" counter(langs) ")");
    counter-increment: langs;
}

// default keys
$keyForSlGms:     "" !default;
$keyForTlGms:     "" !default;
$keyForClear:     "" !default;
$keyForSpeech:    "" !default;
$keyForSrcRoman:  "" !default;
$keyForSrcListen: "" !default;
$keyForResSelect: "" !default;
$keyForResCopy:   "" !default;
$keyForResRoman:  "" !default;
$keyForResListen: "" !default;
$keyForPbStar:    "" !default;

// source language list
#gt-sl-gms {
    .goog-flat-menu-button-dropdown::after {
        @include key-nav-for-langlist(if($keyForSlGms != "", "(#{$keyForSlGms})", ""));
    }
}
// target language list
#gt-tl-gms {
    .goog-flat-menu-button-dropdown::after {
        @include key-nav-for-langlist(if($keyForTlGms != "", "(#{$keyForTlGms})", ""));
    }
}

#gt-clear::after {
    @include key-nav-v-char(if($keyForClear != "", "(#{$keyForClear})", ""), -7px);
}
#gt-speech::after {
    @include key-nav-v-char(if($keyForSpeech != "", "(#{$keyForSpeech})", ""));
}
#gt-src-roman::after {
    @include key-nav-v-char(if($keyForSrcRoman != "", "(#{$keyForSrcRoman})", ""));
}
#gt-src-listen::after {
    @include key-nav-v-char(if($keyForSrcListen != "", "(#{$keyForSrcListen})", ""));
}
#gt-res-select::after {
    @include key-nav-v-char(if($keyForResSelect != "", "(#{$keyForResSelect})", ""));
}
#gt-res-copy::after {
    @include key-nav-v-char(if($keyForResCopy != "", "(#{$keyForResCopy})", ""));
}
#gt-res-listen::after {
    @include key-nav-v-char(if($keyForResListen != "", "(#{$keyForResListen})", ""));
}
#gt-pb-star .goog-toolbar-button::after {
    @include key-nav-v-char(if($keyForPbStar != "", "(#{$keyForPbStar})", ""));
}
#gt-res-roman::after {
    @include key-nav-v-char(if($keyForResRoman != "", "(#{$keyForResRoman})", ""));
}
